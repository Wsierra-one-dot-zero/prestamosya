name: Deploy App on ECS AWS

on:
  push:
    branches:
      - feature/*
  
  workflow_dispatch:
    inputs:
      Name_Ecr_Repository:
        description: 'Name of the ECR repository'
        required: true
        default: 'genos/dev/loans-app'

permissions:
  id-token: write
  contents: read

jobs:
  Build:
    name: Build APP
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}
          aws-region: us-east-1

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Django collectstatic
        run: |
          python manage.py collectstatic --noinput

      - name: Ensure ECR Public repository exists
        run: |
          set -e
          REPO_NAME=${{ github.event.inputs['Name_Ecr_Repository'] }}

          echo "Checking if repository '$REPO_NAME' exists in public ECR..."

          if aws ecr-public describe-repositories \
              --region us-east-1 \
              --repository-names "$REPO_NAME" >/dev/null 2>&1; then
            echo "Repository already exists."
          else
            echo "Repository does not exist. Creating..."
            aws ecr-public create-repository \
              --region us-east-1 \
              --repository-name "$REPO_NAME"
            echo "Repository '$REPO_NAME' created."
          fi

          echo "Fetching registry alias..."
          REGISTRY_ALIAS=$(aws ecr-public describe-registries --region "us-east-1" \
            --query 'registries[0].registryAlias' --output text)

          echo "REGISTRY_ALIAS=$REGISTRY_ALIAS" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Login to Amazon ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 \
          | docker login --username AWS --password-stdin public.ecr.aws/$REGISTRY_ALIAS

      - name: Build Docker image
        run: |
          IMAGE_URI=public.ecr.aws/$REGISTRY_ALIAS/$REPO_NAME:latest
          docker build -t $IMAGE_URI .

      - name: Push image to ECR Public
        run: |
          IMAGE_URI=public.ecr.aws/$REGISTRY_ALIAS/$REPO_NAME:latest
          docker push $IMAGE_URI